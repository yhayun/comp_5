#!/bin/bash
printf "\n\n\n\n::::::::::::: make hw5 :::::::::::::\n\n\n\n" 
flex scanner.lex
bison -d parser.ypp
g++ -o hw5 *.c *.cpp
printf "\n\n\n\n::::::::::::: run tests :::::::::::::\n\n\n\n" 
rm -f tests/*.il
rm -f tests/*_____.out
counter=0
counter_f=0
flag=0
for f in `ls tests/*.in`; do
	temp=`sed "s/\.in//g" <<< "$f"`
	test_name=$(basename $temp)
	let dots_len=50-${#test_name}
	il_file=`sed "s/\.in/.il/g" <<< "$f"`
	out_file=`sed "s/\.in/.out/g" <<< "$f"`
	out2_file=`sed "s/\.in/_____.out/g" <<< "$f"`
	printf "$test_name"
	for i in `seq 1 $dots_len`
	do
		printf "."
	done
	./hw5 < $f > $il_file
	./spim -file $il_file > $out2_file
	diff $out2_file $out_file 1>/dev/null
	if [[ $? -eq 0 ]]; then
		printf "Passed\n"
		rm -f $il_file
		rm -f $out2_file
	else
		let flag=1
		printf "Failed\n"
		#diff $out_file $res_file
		let counter_f=counter_f+1
	fi
	let counter=counter+1
done
printf "\n\n\n\n::::::::::::: $counter_f tests failed out of $counter :::::::::::::\n"
if [[ flag -eq 0 ]]; then
	printf "::::::::::::::::::: well done!!! :::::::::::::::::::"
fi	
printf "\n\n\n\n"
	